name: manual_test_pip

on:
  workflow_dispatch

jobs:
  build:
  
    # TODO: Do we care if this only runs on allowed branches since we check push/pull_request above?
    #if: github.ref == 'refs/heads/master' OR github.ref == 'refs/heads/develop'

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9, 3.10.x]
    runs-on: ${{ matrix.os }}

    steps:
    - name: create empty requirements.txt
      run: |
        echo '' > requirements.txt

    - name: Set up Python ${{ matrix.python-version }}  ${{ matrix.os }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}   
        cache: 'pip'   
    - run: |
        python --version
        python -m pip install --upgrade pip        
        # Install our package to make sure our setup works...
        pip install medspacy
        pip install ipywidgets
        pip install pyodbc
        pip install jupyterlab
        pip install nltk
        pip install medspacy_quickumls==2.7
        pip install pandas        
        # set up all spacy language models that are used in our pytest tests
        python -m spacy download de_core_news_sm
        python -m spacy download en_core_web_sm
        python -m spacy download en_core_web_md
        # multilingual models for testing compatibility
        python -m spacy download es_core_news_sm
        python -m spacy download pl_core_news_sm
        python -m spacy download de_core_news_sm
        python -m spacy download xx_ent_wiki_sm
        # install scispacy model as well to ensure compatibility
        pip install https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.3.0/en_core_sci_sm-0.3.0.tar.gz
        pip install flake8 pytest
        # we want to test execution of jupyter notebooks in pytest as well

    - uses: actions/checkout@v3
    - name: check clone
      run: |
        ls
        python -c "import shutil;shutil.rmtree('medspacy')"
        ls

    - name: Test with pytest
      run: |        
        pytest
